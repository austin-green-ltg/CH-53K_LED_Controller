# project name:
PROJECT := CH-53K_IAR

# list of all source directories used by this project
VPATH := . \
  ../Core/Src \
  ../USB_DEVICE/App \
  ../USB_DEVICE/Target \
  ../Drivers/STM32L4xx_HAL_Driver\Src \
  ../Middlewares/ST/STM32_USB_Device_Library/Core/Src \
  ../Middlewares/ST/STM32_USB_Device_Library/Class/DFU/Src \
  ../EWARM \

# list of all include directories needed by this project
INCLUDES := -I. \
  -I ../Core/Inc \
  -I ../USB_DEVICE/App \
  -I ../USB_DEVICE/Target \
  -I ../Drivers/STM32L4xx_HAL_Driver/Inc \
  -I ../Drivers/STM32L4xx_HAL_Driver/Inc/Legacy \
  -I ../Middlewares/ST/STM32_USB_Device_Library/Core/Inc \
  -I ../Middlewares/ST/STM32_USB_Device_Library/Class/DFU/Inc \
  -I ../Drivers/CMSIS/Device/ST/STM32L4xx/Include \
  -I ../Drivers/CMSIS/Include \
#-----------------------------------------------------------------------------
# project files:
#

# C source files...
C_SRCS := \
  adc.c \
  button_handler.c \
  current_handler.c \
  delay_handler.c \
  dma.c \
  fram.c \
  gpio.c \
  logger.c \
  main.c \
  my_printf.c \
  pwm_handler.c \
  spi.c \
  stm32l412xx-bsp.c \
  stm32l4xx_hal.c \
  stm32l4xx_hal_cortex.c \
  stm32l4xx_hal_dma.c \
  stm32l4xx_hal_dma_ex.c \
  stm32l4xx_hal_exti.c \
  stm32l4xx_hal_flash.c \
  stm32l4xx_hal_flash_ex.c \
  stm32l4xx_hal_flash_ramfunc.c \
  stm32l4xx_hal_gpio.c \
  stm32l4xx_hal_i2c.c \
  stm32l4xx_hal_i2c_ex.c \
  stm32l4xx_hal_msp.c \
  stm32l4xx_hal_pcd.c \
  stm32l4xx_hal_pcd_ex.c \
  stm32l4xx_hal_pwr.c \
  stm32l4xx_hal_pwr_ex.c \
  stm32l4xx_hal_rcc.c \
  stm32l4xx_hal_rcc_ex.c \
  stm32l4xx_it.c \
  stm32l4xx_ll_adc.c \
  stm32l4xx_ll_dma.c \
  stm32l4xx_ll_exti.c \
  stm32l4xx_ll_gpio.c \
  stm32l4xx_ll_rcc.c \
  stm32l4xx_ll_spi.c \
  stm32l4xx_ll_tim.c \
  stm32l4xx_ll_usart.c \
  stm32l4xx_ll_usb.c \
  stm32l4xx_ll_utils.c \
  system_stm32l4xx.c \
  temperature_handler.c \
  tim.c \
  usart.c \
  usb_device.c \
  usbd_conf.c \
  usbd_core.c \
  usbd_ctlreq.c \
  usbd_desc.c \
  usbd_dfu.c \
  usbd_dfu_if.c \
  usbd_ioreq.c \
  voltage_handler.c \

# Assembler files
S_SRCS := \
	startup_stm32l412xx.s

LIB_DIRS :=
LIBS     :=

# defines...
DEFINES  := \
	-D STM32L412xx \
	-D USE_FULL_LL_DRIVER \
	-D ENABLE_UART_DEBUGGING \

#============================================================================
# Typically you should not need to change anything below this line

#-----------------------------------------------------------------------------
# GNU toolset:
#
CC    := "C:/Programs/IAR Systems/Embedded Workbench 9.2/arm/bin/iccarm.exe"
AS    := "C:/Programs/IAR Systems/Embedded Workbench 9.2/arm/bin/iasmarm.exe"
LINK  := "C:/Programs/IAR Systems/Embedded Workbench 9.2/arm/bin/ilinkarm.exe"
ELF   := "C:/Programs/IAR Systems/Embedded Workbench 9.2/arm/bin/ielftool.exe"

#-----------------------------------------------------------------------------
# basic utilities (depends on the OS this Makefile runs on):
#
ifeq ($(OS),Windows_NT)
	MKDIR      := mkdir
	RM         := rm
	TARGET_EXT := .exe
else ifeq ($(OSTYPE),cygwin)
	MKDIR      := mkdir -p
	RM         := rm -f
	TARGET_EXT := .exe
else
	MKDIR      := mkdir -p
	RM         := rm -f
	TARGET_EXT :=
endif

#-----------------------------------------------------------------------------
# build options...

BIN_DIR := iar-build

CFLAGS  := --debug --endian=little --cpu=Cortex-M4 -e --warnings_are_errors --fpu=VFPv4_sp \
	--dlib_config "C:/Programs/IAR Systems/Embedded Workbench 9.2/arm/inc/c/DLib_Config_Full.h" \
	$(INCLUDES)  \
	-Ohs --require_prototypes

SFLAGS :=  -s+ -M"<>" -w+ -r --cpu=Cortex-M4 --fpu=VFPv4_sp

LINKFLAGS := --redirect _Printf=_PrintfFullNoMb --redirect _Scanf=_ScanfFullNoMb \
	--map "../EWARM/CH-53K_LED_Controller/List/CH-53K_LED_Controller.map" \
	--config ../EWARM/stm32l412xx_flash.icf  \
	--warnings_are_errors --semihosting --entry __iar_program_start --vfe --text_out locale --cpu=Cortex-M4 --fpu=VFPv4_sp

ELFFLAGS := --ihex --verbose

#-----------------------------------------------------------------------------
C_OBJS       := $(patsubst %.c,%.o,   $(C_SRCS))
S_OBJS       := $(patsubst %.s,%.o,   $(S_SRCS))

TARGET_EXE     := $(BIN_DIR)/$(PROJECT)$(TARGET_EXT)
TARGET_HEX     := $(BIN_DIR)/$(PROJECT).hex
C_OBJS_EXT     := $(addprefix $(BIN_DIR)/, $(C_OBJS))
S_OBJS_EXT     := $(addprefix $(BIN_DIR)/, $(S_OBJS))
C_DEPS_EXT     := $(patsubst %.o,%.d, $(C_OBJS_EXT))
S_DEPS_EXT     := $(patsubst %.o,%.d, $(S_OBJS_EXT))

#-----------------------------------------------------------------------------
# rules
#

.PHONY : clean show

all : $(TARGET_HEX)

$(TARGET_HEX) : $(TARGET_EXE)
	$(ELF) $(ELFFLAGS) $^ $@

$(TARGET_EXE) : $(C_OBJS_EXT) $(S_OBJS_EXT)
	$(LINK) $^ --no_out_extension -o $@ $(LINKFLAGS)

$(BIN_DIR)/%.o : %.s
	$(AS) $< -o $@ $(SFLAGS)

$(BIN_DIR)/%.o : %.c
	$(CC) $< $(DEFINES) -o $@ $(CFLAGS)

# create BIN_DIR and include dependencies only if needed
ifneq ($(MAKECMDGOALS),clean)
  ifneq ($(MAKECMDGOALS),show)
     ifneq ($(MAKECMDGOALS),debug)
ifeq ("$(wildcard $(BIN_DIR))","")
$(shell $(MKDIR) $(BIN_DIR))
endif
-include $(C_DEPS_EXT) $(S_DEPS_EXT)
     endif
  endif
endif

clean :
	-$(RM) $(BIN_DIR)/*.*

show :
	@echo PROJECT      	= $(PROJECT)
	@echo TARGET_EXE   	= $(TARGET_EXE)
	@echo VPATH        	= $(VPATH)
	@echo C_SRCS       	= $(C_SRCS)
	@echo C_DEPS_EXT   	= $(C_DEPS_EXT)
	@echo C_OBJS_EXT   	= $(C_OBJS_EXT)
	@echo LIB_DIRS     	= $(LIB_DIRS)
	@echo LIBS         	= $(LIBS)
	@echo DEFINES      	= $(DEFINES)

